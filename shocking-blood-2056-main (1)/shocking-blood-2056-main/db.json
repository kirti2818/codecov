{
    "products":[
        {
            "h1":"Impact Analysis",
            "paragraph":"Impact Analysis takes runtime information from an application’s production environment and provides this information contextually in the Codecov dashboard and in the Codecov pull request comment.",
            "img":"https://about.codecov.io/wp-content/uploads/2022/06/0622_ProjectInsights.jpg"
            
        },{
            "h1":"Source Code Coverage",
            "paragraph":"Codecov highlights which portions of your code that have not been properly tested or may require additional testing.",
            "img":"https://about.codecov.io/wp-content/uploads/2020/10/Source-Code-Coverage-1.png"

        },{
            "h1":"Multi Language, Multi CI/CD",
            "paragraph":"Our goal at Codecov is that it works for YOU right out of the box.Regardless of what languages or CI/CDs you use.",
            "img":"https://about.codecov.io/wp-content/uploads/2020/10/CD.png"
            
        },{
            "h1":"Pull Request Comments",
            "paragraph":"Pull Request Comments allow you and your team to see coverage summaries directly in your workflow so that you can add and update tests quickly and effectively.",
            "img":"https://about.codecov.io/wp-content/uploads/2020/10/Pull-request-comments.png"
            
        },{
            "h1":"Status Checks",
            "paragraph":"Codecov status checks allow you to block underperforming pull requests from being merged based on thresholds you choose. If your goal is to maintain 85% coverage. ",
            "img":"https://about.codecov.io/wp-content/uploads/2020/10/Status-Checks-1.png"
            
        },{
            "h1":"Badges",
            "paragraph":"A Codecov badge is a live icon that is displayed within your code host that gives you a glance into the status of your project’s percentage of code coverage.",
            "img":"https://about.codecov.io/wp-content/uploads/2020/10/Gthub-Badges.png"
            
        },{
            "h1":"Report Merging",
            "paragraph":"Codecov Report Merging creates a unified coverage report even if you set up your tests in multiple build systems, split up tests in different containers.",
            "img":"https://about.codecov.io/wp-content/uploads/2020/10/Report-Merging.png"
            
        },{
            "h1":"Flags",
            "paragraph":"Do you split your testing between your frontend and backend? Maybe collect coverage by project in a monorepository? You can isolate coverage information based on groupings using Codecov Flags.",
            "img":"https://about.codecov.io/wp-content/uploads/2020/10/Flags.png"
            
        },{
            "h1":"YAML",
            "paragraph":"Customize Codecov’s behavior with a developer friendly YAML file that can conform to even the most complex codebases and workflows.",
            "img":"https://about.codecov.io/wp-content/uploads/2020/10/YAML.png"
        
        },{
            "h1":"Carryforward Flags",
            "paragraph":"Don’t run your entire test suite on every commit? Use Carryforward Flags to get consistent coverage metrics, even when you don’t upload all coverage reports.",
            "img":"https://about.codecov.io/wp-content/uploads/2020/10/Carryforward-flags.png"
            
        },{
            "h1":"GitHub Checks",
            "paragraph":"Want to see uncovered lines directly on a GitHub pull request? Our GitHub Checks feature shows you line-by-line coverage so you can stay in your workflow.",
            "img":"https://about.codecov.io/wp-content/uploads/2020/10/Checks-passed.png"
            
        },{
            "h1":"Notifications",
            "paragraph":"Get notified of coverage changes on Slack, Gitter, or any other IRC-compatible service.",
            "img":"https://about.codecov.io/wp-content/uploads/2020/10/Notifications.png"
            
        }
            
        
    ]
}